#!/usr/bin/env bash
# reset environment variables that could interfere with normal usage
export GREP_OPTIONS=
# put all utility functions here

# make a temporary file
git_extra_mktemp() {
    mktemp -t "$(basename "$0")".XXXXXXX
}

#
# check whether current directory is inside a git repository
#

is_git_repo() {
  git rev-parse --show-toplevel > /dev/null 2>&1
  result=$?
  if test $result != 0; then
    >&2 echo 'Not a git repo!'
    exit $result
  fi
}

is_git_repo
#
# check whether current directory contains any git commit
#

has_git_commit() {
  git rev-parse --short HEAD > /dev/null 2>&1
  result=$?
  if test $result != 0; then
    >&2 echo 'Not git commit found!'
    exit $result
  fi
}

has_git_commit

back="^"

case "$1" in
  -h)
    cat << EOL
This will erase any changes since your last commit.
If you want to get help info, run "git undo --help" instead.
Do you want to continue? [yN]"
EOL
    read -r res
    case "${res}" in
      "Y" | "y")
        test $2 -gt 1 > /dev/null 2>&1 && back="~$2"
        git reset --hard HEAD$back
        exit $?
        ;;
      * )
        exit 0
        ;;
    esac
    ;;
  --hard)
    test $2 -gt 1 > /dev/null 2>&1 && back="~$2"
    git reset --hard HEAD$back
    ;;
  -s|--soft)
    test $2 -gt 1 > /dev/null 2>&1 && back="~$2"
    git reset --soft HEAD$back
    ;;
  *)
    test $1 -gt 1 > /dev/null 2>&1 && back="~$1"
    git reset --soft HEAD$back
    git reset
    ;;
esac
